[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "q2-asap"
description = "A QIIME 2 ASAP plugin"
readme = "README.rst"
requires-python = ">=3.8"
keywords = ["ASAP"]
license = { file = "LICENSE" }
dynamic = ["version"]
classifiers = [
    "Programming Language :: Python :: 3",
]
dependencies = [
    "q2-nasp2-types@git+https://github.com/TGenNorth/q2-nasp2-types#egg=bamUpdates",
    "q2-aligners@git+https://github.com/TGenNorth/q2-aligners#egg=samUpdates",
    "q2-trimmers@git+https://github.com/TGenNorth/q2-trimmers",
    "pip::pysam == 0.22.1"
]

[tool.setuptools.packages]
find = { }

[project.entry-points."qiime2.plugins"]
q2-asap = "q2_asap.plugin_setup:plugin"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests"
]

[tool.setuptools_scm]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"